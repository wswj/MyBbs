<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wj.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.wj.pojo.Article">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="titles" jdbcType="VARCHAR" property="titles" />
    <result column="fcontent" jdbcType="VARCHAR" property="fcontent" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="bname" jdbcType="VARCHAR" property="bname" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, titles, fcontent, photo, bname, time, userid, username, status
  </sql>
  <!--根据搜索条件查询的动态sql-->
  <sql id="queryBySearch">

      <if test="titles!=null and titles!=''">
        titles like '%${titles}%'
      </if>

    <if test="titles==null">
        titles like '%'
    </if>
  </sql>
  <!--修改article表的user信息-->
  <select id="updateArticleSetup" parameterType="com.wj.pojo.Article">
    update article
    set username=#{username,jdbcType=VARCHAR}
    where userid=#{userid,jdbcType=INTEGER}
  </select>
  <!--根据表中的userid查询该用户的帖子-->
  <select id="selectByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from article
    where userid=#{userid,jdbcType=INTEGER}
    order by fid desc
  </select>
  <!--根据表中的fid查询帖子-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <!--查询帖子以及帖子的用户信息-->
  <select id="selectArticleInfo" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    a.fid, a.titles, a.fcontent, a.photo, a.bname, a.time, a.userid, a.username, a.status,v.photo userphoto
    from article a left join via v on a.userid=v.userid
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <!--添加帖子-->
  <insert id="insertArticle" parameterType="com.wj.pojo.Article">
     insert into article (fid, titles, fcontent,
      photo, bname, time,
      userid, username, status
      )
    values (#{fid,jdbcType=INTEGER}, #{titles,jdbcType=VARCHAR}, #{fcontent,jdbcType=VARCHAR},
      #{photo,jdbcType=VARCHAR}, #{bname,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
      #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <!--根据fid删除帖子-->
  <select id="deleteByFid" parameterType="java.lang.Integer">
    delete from
    article
    where fid=#{fid.jdbcType=INTEGER}
  </select>
  <!--根据板块名字得到贴子-->
  <select id="selectArticleByBnmae" parameterType="java.lang.String" resultMap="BaseResultMap">
   select
    a.fid, a.titles, a.fcontent, a.photo, a.bname, a.time, a.userid, a.username, a.status,count(*) sum
    from article a left join comment c on a.fid=c.fid
    where a.bname = #{bname,jdbcType=VARCHAR}
	group by a.fid
	order by c.time desc
  </select>
  <!--无条件查询所有帖子-->
  <select id="selectArticle" parameterType="com.wj.pojo.Article" resultMap="BaseResultMap">
     select
    a.fid, a.titles, a.fcontent, a.photo, a.bname, a.time, a.userid, a.username, a.status,count(c.pid) sum,v.photo userphoto
    from article a left join comment c on a.fid=c.fid left join via v on a.userid=v.userid
	group by a.fid
	order by c.time desc
  </select>
  <!--根据搜索条件查询帖子-->
  <select id="selectArticleBySearch" parameterType="com.wj.pojo.Article" resultMap="BaseResultMap">
    select
    a.fid, a.titles, a.fcontent, a.photo, a.bname, a.time, a.userid, a.username, a.status,count(c.pid) sum,v.photo userphoto
    from article a left join comment c on a.fid=c.fid left join via v on a.userid=v.userid
    <where>
      <include refid="queryBySearch"/>
    </where>
	group by a.fid
	order by fid desc
  </select>
  <select id="selectByExample" parameterType="com.wj.pojo.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wj.pojo.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wj.pojo.Article">
    insert into article (fid, titles, fcontent, 
      photo, bname, time, 
      userid, username, status
      )
    values (#{fid,jdbcType=INTEGER}, #{titles,jdbcType=VARCHAR}, #{fcontent,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{bname,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wj.pojo.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="titles != null">
        titles,
      </if>
      <if test="fcontent != null">
        fcontent,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="bname != null">
        bname,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="titles != null">
        #{titles,jdbcType=VARCHAR},
      </if>
      <if test="fcontent != null">
        #{fcontent,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="bname != null">
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wj.pojo.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.titles != null">
        titles = #{record.titles,jdbcType=VARCHAR},
      </if>
      <if test="record.fcontent != null">
        fcontent = #{record.fcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.bname != null">
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set fid = #{record.fid,jdbcType=INTEGER},
      titles = #{record.titles,jdbcType=VARCHAR},
      fcontent = #{record.fcontent,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      bname = #{record.bname,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wj.pojo.Article">
    update article
    <set>
      <if test="titles != null">
        titles = #{titles,jdbcType=VARCHAR},
      </if>
      <if test="fcontent != null">
        fcontent = #{fcontent,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="bname != null">
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wj.pojo.Article">
    update article
    set titles = #{titles,jdbcType=VARCHAR},
      fcontent = #{fcontent,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      bname = #{bname,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
</mapper>